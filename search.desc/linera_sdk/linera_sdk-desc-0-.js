searchState.loadedDescShard("linera_sdk", 0, "This module provides an SDK for developing Linera …\nThe contract interface of a Linera application.\nA logger that uses the system API for contracts.\nHash of a data blob.\nExtension trait to deserialize a type from a vector of …\nInstantiation argument passed to a new application on the …\nThe type of message executed by the application.\nImmutable parameters specific to this application (e.g. …\nImmutable parameters specific to this application.\nResources that an application may spend during the …\nA request to send a message.\nThe service interface of a Linera application.\nA logger that uses the system API for services.\nExtension trait to serialize a type into a vector of bytes …\nThis module defines the notion of Application Binary …\nCommon ABIs that may have multiple implementations.\nWhether the message is authenticated.\nTypes reexported from <code>linera_base</code>.\nA number of bytes to read.\nA number of bytes to write.\nTypes and macros useful for writing an application …\nDeclares an implementation of the <code>Contract</code> trait, …\nThe destination of the message.\nA macro for asserting that a condition is true, returning …\nSupport for Linera applications that interact with …\nApplies a message originating from a cross-chain message.\nApplies an operation from the current block.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDeserializes itself from a vector of bytes using <code>bcs</code>.\nAn amount of execution fuel.\nThe grant resources forwarded with the message.\nGraphQL traits for generating interfaces into applications.\nExecutes a read-only query on the state of this …\nConfigures <code>log</code> to use the log system API for contracts.\nConfigures <code>log</code> to use the log system API for services.\nInstantiates the application on the chain that created it.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSerializes the internal <code>Message</code> type into raw bytes.\nWhether the message is tracked.\nCreates a in-memory instance of the contract handler.\nThe message itself.\nThe size of the messages to be sent.\nA number of messages to be sent.\nCreates a in-memory instance of the service handler.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nA number of read operations to be executed.\nTypes and macros useful for writing an application service.\nDeclares an implementation of the <code>Service</code> trait, exporting …\nAn increase in the amount of storage space.\nFinishes the execution of the current transaction.\nHelper types for writing integration tests for WebAssembly …\nSerializes itself into a vector of bytes using <code>bcs</code>.\nModule with helper types and functions used by the SDK.\nHelper types for using <code>linera_views</code> to store application …\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nA number of write operations to be executed.\nA trait that includes all the types exported by a Linera …\nThe contract types to import.\nThe service types to import.\nA trait that includes all the types exported by a Linera …\nThe type of operation executed by the application.\nThe type of a query receivable by the application’s …\nThe response type of the application’s service.\nThe response type of an application call.\nA trait that includes all the types exported by a Linera …\nMarker trait to help importing contract types.\nMarker trait to help importing service types.\nAn ABI for applications that implement a fungible token.\nAn account.\nRequests an account balance.\nBalance response\nSame as <code>Transfer</code> but the source account may be remote. …\nA fungible response\nAn ABI for applications that implement a fungible token.\nThe initial state to instantiate fungible with\nA builder type for constructing the initial state of the …\nOk response\nAn operation\nMutation root\nThe parameters to instantiate fungible with\nRequests this fungible token’s ticker symbol.\nTicker symbol response\nTransfers tokens from a (locally owned) account to a …\nAccounts and their respective initial balances\nReturns the serialized initial state of the application, …\nChain ID of the account\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInstantiate parameters\nOwner of the account\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nTicker symbol for the fungible\nAdds an account to the initial state of the application.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nAmount to be transferred\nAmount to be claimed\nOwner to query the balance for\nOwner to transfer from\nSource account to claim amount from\nTarget account to transfer the amount to\nTarget account to claim the amount into\nA trait that includes all the types exported by a Linera …\nThe contract types to import.\nThe service types to import.\nA system account.\nAn account owner.\nA non-negative amount of tokens.\nAn account for an application.\nA unique identifier for a user application.\nPermissions for applications on a chain.\nAn error type for arithmetic errors.\nAn assertion oracle that passed.\nActivate the blanket implementation of <code>Hashable</code> based on …\nAn error trying to parse the hex-digits of a BCS-encoded …\nActivate the blanket implementation of <code>Signable</code> based on …\nA blob of binary data, with its content-addressed blob ID.\nA successful read or write of a blob.\nA blob of binary data.\nA content-addressed blob ID i.e. the hash of the …\nThe type of the blob.\nA block height to identify blocks in a chain.\nA unique identifier for an application bytecode.\nHow to create a chain.\nThe unique identifier (UID) of a chain. This is currently …\nRepresents the owner(s) of a chain.\nThe name of a subscription channel.\nThe chain was created by a message from another chain.\nErrors that can happen when attempting to close a chain.\nA trait that includes all the types exported by a Linera …\nError type for cryptographic errors.\nA Sha3-256 value.\nWrapper around <code>rand::CryptoRng</code> and <code>rand::RngCore</code>.\nThe base-10 exponent representing how much a token can be …\nA generic data blob.\nThe destination of a message, relative to a particular …\nThe initial fast round.\nA unique identifier for an application.\nSomething that we know how to hash and sign.\nSomething that we know how to hash.\nA signature key-pair.\nThe maximum value.\nThe maximum value.\nThe maximum value.\nThe index of a message in a chain.\nThe N-th multi-leader round.\nAuthenticated signer wasn’t allowed to close the chain.\nOne token.\nThe type of operation executed by the application.\nA record of a single oracle response.\nThe owner of a chain. This is currently the hash of the …\nThe response from an HTTP POST request.\nA signature public key.\nThe type of a query receivable by the application’s …\nThe response type of the application’s service.\nDirect message to a chain.\nResources that an application may spend during the …\nThe response type of an application call.\nThe chain was created by the genesis configuration.\nAn identifier for successive attempts to decide a value in …\nA request to send a message.\nThe response from a service query.\nA trait that includes all the types exported by a Linera …\nA signature value.\nThe N-th single-leader round.\nAn event stream ID.\nThe name of an event stream.\nBroadcast to the current subscribers of our channel.\nThe system application.\nA BCS-signable struct for testing.\nA duration in microseconds.\nThe timeout configuration: how long fast, multi-leader and …\nA timestamp, in microseconds since the Unix epoch.\nAn account owned by a user.\nA user application.\nThe N-th round where the validators rotate as leaders.\nMarker trait to help importing contract types.\nMarker trait to help importing service types.\nThe zero value.\nThe zero value.\nThe zero value.\nReturns an iterator over all super owners, followed by all …\nReturns an iterator over all super owners’ keys, …\nThe application that can add events to this stream.\nReads the bytes of the hash value.\nReturns this <code>TimeDelta</code> as a <code>Duration</code>.\nReturns this <code>TimeDelta</code> as a number of microseconds.\nWhether the message is authenticated.\nThe duration of the first single-leader and all …\nThe type of the blob.\nThe bytecode to use for the application.\nBytes of the binary blob.\nA number of bytes to read.\nA number of bytes to write.\nReturns whether the given application is allowed to close …\nReturns whether operations with the given application ID …\nCreates an Account with a ChainId\nThe chain of the account.\nThe chain ID that created the message.\nChecks a signature.\nChecks an optional signature.\nThe chain ID representing the chain created by the given …\nThese applications are allowed to close the current chain …\nReturns a reference to the inner <code>BlobContent</code>, without the …\nCopies the key-pair, <strong>including the secret key</strong>.\nThe unique ID of the application’s creation.\nReturns the <code>TimeDelta</code> between <code>other</code> and <code>self</code>, or zero if …\nThe destination of the message.\nReturns the <code>Duration</code> between <code>other</code> and <code>self</code>, or zero if …\nIf this is <code>None</code>, all system operations and application …\nThe age of an incoming tracked or protected message after …\nThe duration of the fast round.\nReturns the first consensus round for this configuration.\nForgets the ABI of a bytecode ID (if any).\nForgets the ABI of a bytecode ID (if any).\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns an <code>Amount</code> corresponding to that many attotokens.\nReturns the given duration, rounded to the nearest …\nReturns an <code>Amount</code> corresponding to that many microtokens, …\nReturns the given number of microseconds as a <code>TimeDelta</code>.\nReturns an <code>Amount</code> corresponding to that many millitokens, …\nReturns the given number of milliseconds as a <code>TimeDelta</code>.\nReturns an <code>Amount</code> corresponding to that many nanotokens, …\nReturns the given number of seconds as a <code>TimeDelta</code>.\nReturns an <code>Amount</code> corresponding to that many tokens, or …\nAn amount of execution fuel.\nGenerates a new key-pair.\nGenerates a new key-pair from the given RNG. Use with care.\nThe grant resources forwarded with the message.\nThe hash of the blob.\nThe height of the block that created the message.\nA content-addressed blob ID i.e. the hash of the <code>Blob</code>.\nThe index of the message inside the block.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTurns the channel name into bytes.\nTurns the stream name into bytes.\nMoves ownership of the blob of binary data\nReturns whether there are any owners or super owners or it …\nWhether the destination is a broadcast channel.\nWhether the chain was created by another chain.\nWhether the round is the fast round.\nWhether the round is a multi-leader round.\nWether an <code>OracleResponse</code> is permitted in fast blocks or …\nWhether the message is tracked.\nLeaves just the ABI of a bytecode ID (if any).\nLoads a blob from a file.\nHelper function to obtain the 64 least significant bits of …\nAt least one operation or incoming message from each of …\nThe message itself.\nThe message ID that published the bytecode.\nThe size of the messages to be sent.\nA number of messages to be sent.\nReturns the number of microseconds since the Unix epoch.\nThe number of initial rounds after 0 in which all owners …\nCreates a <code>ChainOwnership</code> with the specified regular owners.\nComputes a hash.\nComputes a signature.\nCreates a new <code>TestString</code> with the given string.\nCreates a bytecode ID from a message ID.\nCreates a new <code>BlobId</code> from a <code>BlobContent</code>\nCreates a new <code>BlobId</code> from a hash\nCreates new <code>ApplicationPermissions</code> where the given …\nReturns the round following the specified one, if any.\nReturns the current time according to the system clock.\nThe index of a round amongst the rounds of the same …\nCreates an Account with a ChainId and an Owner\nThe owner of the account, or <code>None</code> for the chain balance.\nThe regular owners, with their weights that determine how …\nObtains the public key of a key-pair.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nA number of read operations to be executed.\nThe chain ID representing the N-th chain created at …\nReturns the duration of the given round.\nSaturating addition.\nSaturating addition.\nSaturating addition.\nReturns the timestamp that is <code>duration</code> later than <code>self</code>.\nSaturating in-place addition.\nSaturating in-place addition.\nSaturating in-place addition.\nReturns a timestamp <code>micros</code> microseconds later than <code>self</code>, …\nDivides this by the other amount. If the other is 0, it …\nSaturating multiplication.\nSaturating multiplication.\nSaturating multiplication.\nSaturating subtraction.\nSaturating subtraction.\nSaturating subtraction.\nReturns the timestamp that is <code>duration</code> earlier than <code>self</code>.\nReturns a timestamp <code>micros</code> microseconds earlier than <code>self</code>, …\nCreates a <code>ChainOwnership</code> with a single super owner.\nAn increase in the amount of storage space.\nThe name of this stream: an application can have multiple …\nSuper owners can propose fast blocks in the first round, …\nCreates a <code>BlobContent</code> from a string for testing purposes.\nCreates a <code>Blob</code> from a string for testing purposes.\nReturns the hash of <code>TestString(s)</code>, for testing purposes.\nA fake public key used for testing.\nThe timeout configuration: how long fast, multi-leader and …\nThe duration by which the timeout increases after each …\nChecked addition.\nChecked addition.\nChecked addition.\nChecked in-place addition.\nChecked in-place addition.\nChecked in-place addition.\nChecked in-place increment.\nChecked in-place increment.\nChecked in-place increment.\nChecked increment.\nChecked increment.\nChecked increment.\nChecked multiplication.\nChecked multiplication.\nChecked multiplication.\nChecked in-place multiplication.\nChecked in-place multiplication.\nChecked in-place multiplication.\nChecked subtraction.\nChecked subtraction.\nChecked subtraction.\nChecked in-place subtraction.\nChecked in-place subtraction.\nChecked in-place subtraction.\nChecked decrement.\nChecked decrement.\nChecked decrement.\nThe name of the type.\nThe category of the round as a string.\nHelper function to obtain the 64 most significant bits of …\nReturns the <code>ApplicationId</code>, or <code>None</code> if it is <code>System</code>.\nVerifies a batch of signatures.\nReturns the given owner’s public key, if they are an …\nSpecializes an application ID for a given ABI.\nSpecializes a bytecode ID for a given ABI.\nCreates a <code>Blob</code> checking that this is the correct <code>BlobId</code>.\nCreates a <code>Blob</code> without checking that this is the correct …\nCreates a <code>Blob</code> by hashing <code>self</code>.\nAdds a regular owner.\nSend the content of <code>Self</code> to the given hasher.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nA number of write operations to be executed.\nInside tests, use the <code>MockContractRuntime</code> instead of the …\nA mock of the common runtime to interface with the host …\nAdds an expected <code>assert_data_blob_exists</code> call, and the …\nAdds an expected call to <code>open_chain</code>, and the message ID …\nAdds an expected <code>http_post</code> call, and the response it …\nAdds an expected <code>read_data_blob</code> call, and the response it …\nAdds an expected <code>query_service</code> call`, and the response it …\nReturns the ID of the current application.\nReturns the application parameters provided when the …\nPanics if the current time at block validation is …\nAsserts that a blob with the given hash exists in storage.\nReturns the authenticated caller ID, if the caller …\nReturns the authenticated signer for this execution, if …\nReturns the height of the current block that is executing.\nCalls another application.\nReturns the current chain balance.\nReturns the ID of the current chain.\nRetrieves the owner configuration for the current chain.\nClaims an <code>amount</code> of native tokens from a <code>source</code> account to …\nReturns the list of claims made during the test so far.\nCloses the current chain. Returns an error if the …\nReturns the list of <code>SendMessageRequest</code>s created so far …\nAdds a new item to an event stream.\nReturns the argument unchanged.\nMakes a GET request to the given URL as an oracle and …\nCalls <code>U::from(self)</code>.\nReturns the key-value store to interface with storage.\nReturns the ID of the incoming message that is being …\nReturns <code>true</code> if the incoming message was rejected from the …\nCreates a new <code>MockContractRuntime</code> instance for a contract.\nOpens a new chain, configuring it with the provided …\nReturns the outgoing transfers scheduled during the test …\nReturns the balance of one of the accounts on this chain.\nReturns a <code>MessageBuilder</code> to prepare a message to be sent.\nQueries our application service as an oracle and returns …\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads a data blob with the given hash from storage.\nRuns an asynchronous entrypoint in a blocking manner, by …\nSchedules a message to be sent to this application on …\nConfigures the application ID to return during the test.\nConfigures the application parameters to return during the …\nConfigures the authenticated caller ID to return during …\nConfigures the authenticated signer to return during the …\nConfigures the block height to return during the test.\nConfigures the handler for cross-application calls made …\nConfigures if the application being tested is allowed to …\nConfigures the chain balance to return during the test.\nConfigures the chain ID to return during the test.\nConfigures the chain ownership configuration to return …\nConfigures the message ID to return during the test.\nConfigures the <code>message_is_bouncing</code> flag to return during …\nConfigures the balance of one account on the chain to use …\nConfigures the balances on the chain to use during the …\nConfigures the system time to return during the test.\nSubscribes to a message channel from another chain.\nReturns the list of requests to subscribe to channels made …\nRetrieves the current system time, i.e. the timestamp of …\nTransfers an <code>amount</code> of native tokens from <code>source</code> owner …\nUnsubscribes to a message channel from another chain.\nReturns the list of requests to unsubscribe to channels …\nConfigures the application ID to return during the test.\nConfigures the application parameters to return during the …\nConfigures the authenticated caller ID to return during …\nConfigures the authenticated signer to return during the …\nConfigures the block height to return during the test.\nConfigures the handler for cross-application calls made …\nConfigures if the application being tested is allowed to …\nConfigures the chain balance to return during the test.\nConfigures the chain ID to return during the test.\nConfigures the chain ownership configuration to return …\nConfigures the message ID to return during the test.\nConfigures the <code>message_is_bouncing</code> flag to return during …\nConfigures the balance of one account on the chain to use …\nConfigures the balances on the chain to use during the …\nConfigures the system time to return during the test.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nA wrapper for a URL that implements <code>JsonRpcClient</code> and uses …\nA single primitive data type. This is used for example for …\nThe data type for an Ethereum event emitted by a smart …\nThe basic Ethereum queries that can be used from a smart …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nLists all the accounts of the Ethereum node.\nGets the balance of the specified address at the specified …\nGets the latest block number of the Ethereum node.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>EthereumClient</code> from an URL.\nThe operation done with <code>eth_call</code> on Ethereum returns a …\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads the events of the smart contract.\nThe URL of the JSON-RPC server, without the method or …\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nAn object associated with a GraphQL mutation root. Those …\nRe-exports the derive macro for <code>GraphQLMutationRoot</code>.\nThe type of the mutation root.\nReturns the mutation root of the object.\nThe runtime available during execution of a query.\nInside tests, use the <code>MockServiceRuntime</code> instead of the …\nReturns the ID of the current application.\nReturns the application parameters provided when the …\nAsserts that a blob with the given hash exists in storage.\nReturns the owners of accounts on this chain.\nReturns the current chain balance.\nReturns the ID of the current chain.\nFetches a blob of bytes from a given URL.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the key-value store to interface with storage.\nCreates a new <code>MockServiceRuntime</code> instance for a service.\nReturns the height of the next block that can be added to …\nReturns the balance of one of the accounts on this chain.\nReturns the balances of all accounts on the chain.\nQueries another application.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nFetches a blob from a given hash.\nRuns an asynchronous entrypoint in a blocking manner, by …\nConfigures the application ID to return during the test.\nConfigures the application parameters to return during the …\nConfigures the blob returned when fetching from the hash …\nConfigures the blobs returned when fetching from hashes …\nConfigures the chain balance to return during the test.\nConfigures the chain ID to return during the test.\nConfigures the block height to return during the test.\nConfigures the balance of one account on the chain to use …\nConfigures the balances on the chain to use during the …\nConfigures the handler for application queries made during …\nConfigures the system time to return during the test.\nConfigures the <code>blob</code> returned when fetching from the <code>url</code> …\nConfigures the blobs returned when fetching from URLs …\nRetrieves the current system time, i.e. the timestamp of …\nConfigures the application ID to return during the test.\nConfigures the application parameters to return during the …\nConfigures the <code>Blob</code> returned when fetching from the <code>BlobId</code> …\nConfigures the blobs returned when fetching from hashes …\nConfigures the chain balance to return during the test.\nConfigures the chain ID to return during the test.\nConfigures the next block height to return during the test.\nConfigures the balance of one account on the chain to use …\nConfigures the balances on the chain to use during the …\nConfigures the handler for application queries made during …\nConfigures the system time to return during the test.\nConfigures the <code>blob</code> returned when fetching from the <code>url</code> …\nConfigures the blobs returned when fetching from URLs …\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nExecute the incoming message.\nA reference to a single microchain inside a <code>TestValidator</code>.\nA helper type to build <code>Block</code>s using the builder pattern, …\nThe message is a channel broadcast.\nThe message is a direct message.\nThe origin of a message coming from a particular chain. …\nWhat to do with a message picked from the inbox.\nDo not execute the incoming message.\nA minimal validator implementation suited for tests.\nAdds a block to this microchain.\nReturns the <code>TestClock</code> of this validator.\nReturns the committee that this test validator is part of.\nCreates an application on this microchain, using the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the <code>ActiveChain</code> reference to the microchain …\nReturns the height of the tip of this microchain.\nExecutes a GraphQL <code>query</code> on an <code>application</code>’s state on …\nReceives all queued messages in all inboxes of this …\nReturns the <code>ChainId</code> of this microchain.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the <code>KeyPair</code> of the active owner of this microchain.\nReturns the keys this test validator uses for signing …\nReturns all messages logged so far.\nSets the mocked application ID.\nSets the mocked application parameters.\nSets the mocked application state.\nSets the mocked chain balance.\nSets the mocked chain ID.\nInitializes and returns a view context for using as the …\nSets the mocked system timestamp.\nMocks the <code>try_query_application</code> system API.\nCreates a new <code>ActiveChain</code> instance referencing a new empty …\nCreates a new <code>TestValidator</code>.\nCreates a new microchain and returns the <code>ActiveChain</code> that …\nReturns the <code>PublicKey</code> of the active owner of this …\nPublishes the bytecodes in the crate at <code>repository_path</code>.\nPublishes the bytecodes in the crate calling this method …\nExecutes a <code>query</code> on an <code>application</code>’s state on this …\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nRegisters on this chain an application created on another …\nSets the <code>KeyPair</code> to use for signing new blocks.\nSubscribes this microchain to the bytecodes published on …\nCreates a <code>ContractRuntime</code> to use in tests.\nCreates a <code>ServiceRuntime</code> to use in tests.\nTries to add a block to this microchain.\nAdds an application permissions change to this block.\nCreates a new <code>TestValidator</code> with the application of the …\nCreates a new <code>TestValidator</code> with a single microchain with …\nReceives all direct messages  that were sent to this chain …\nReceives all messages that were sent to this chain by the …\nAdds a native token transfer to this block.\nAdds a user <code>operation</code> to this block.\nAdds an operation to change this chain’s ownership.\nAdds a request to register an application on this chain.\nReceives all admin messages that were sent to this chain …\nConfigures the timestamp of this block.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nAn extension trait to block on a <code>Future</code> until it completes.\nThe type returned by the <code>Future</code>.\nA <code>Future</code> that returns <code>Poll::Pending</code> once and immediately …\nWaits for the <code>Future</code> to complete in a blocking manner.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nYields the current asynchronous task so that other tasks …\nArithmetic error\nAn alias to …\nAn alias to <code>linera_views::map_view::ByteMapView</code> that uses …\nAn alias to <code>linera_views::set_view::ByteSetView</code> that uses …\nWe failed to acquire an entry in a CollectionView or a …\nAn alias to <code>linera_views::collection_view::CollectionView</code> …\nAn alias to …\nAn alias to <code>linera_views::map_view::CustomMapView</code> that …\nSometimes we need a serialization that is different from …\nAn alias to <code>linera_views::set_view::CustomSetView</code> that …\nThe database is corrupt: Entries don’t have the expected …\nInput output error.\nThe key must not be too long\nA type to interface with the key value storage provided to …\nAn alias to <code>linera_views::log_view::LogView</code> that uses the …\nAn alias to <code>linera_views::map_view::MapView</code> that uses the …\nThe database is corrupt: Some entries are missing\nThe number of keys used for the initialization\nFIXME(#148): This belongs to a future …\nThe values are incoherent.\nAn alias to <code>linera_views::queue_view::QueueView</code> that uses …\nAn alias to <code>linera_views::collection_view::ReadGuardedView</code> …\nAn alias to <code>linera_views::register_view::RegisterView</code> that …\nA <code>View</code> whose staged modifications can be saved in storage.\nAn error occurred during BCS serialization.\nAn alias to <code>linera_views::set_view::SetView</code> that uses the …\nErrors within the context can occur and are presented as …\nTokio errors can happen while joining.\nThe value is too large for the client\nAn error happened while trying to lock.\nA view gives exclusive access to read and write the data …\nMain error type for the crate.\nImplementation of <code>linera_views::common::Context</code> to be used …\nErrors can happen within the Wasm guest and have to be …\nThe base key for the current view.\nClears the view. That can be seen as resetting to default. …\nObtains a mutable reference to the internal context.\nUser-defined data attached to the view.\nPersists changes to storage. This leaves the view still …\nReturns the argument unchanged.\nReturns the argument unchanged.\nDeserialize the vector\nReturns <code>true</code> if flushing this view would result in changes …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoads a view\nReturns a new <code>KeyValueStore</code> that just keeps the storage …\nBuilds a trivial view that is already deleted\nCreates a <code>NotFound</code> error with the given message and key.\nLoads a view from the values\nCreates the keys needed for loading the view\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nDiscards all pending changes. After that <code>flush</code> should have …\nSaves the root view to the database context\nThe DB client that is shared between views.\nSerializes the value\nReturns a mocked <code>KeyValueStore</code> that shares the memory …\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nbackend can be e.g. RocksDB / DynamoDB / Memory / etc.\nerror is the specific problem that occurred within that …")