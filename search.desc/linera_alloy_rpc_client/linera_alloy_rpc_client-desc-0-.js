searchState.loadedDescShard("linera_alloy_rpc_client", 0, "linera-alloy-rpc-client\nA batch JSON-RPC request, used to bundle requests into a …\nConnection string for built-in transports.\nA builder for the transport  <code>RpcClient</code>.\nA borrowed <code>RpcClient</code>.\nHTTP transport.\nA channel yielding responses from a poller task.\nA poller task builder.\nA client using a <code>reqwest</code> HTTP transport.\nA prepared, but unsent, RPC call.\nA JSON-RPC client.\nAwaits a single response for a request that has been …\nAn <code>RpcClient</code> in a <code>Weak</code> reference.\nAdd a call to the batch.\nConvert this future into a boxed, pinned future, erasing …\nBoxes the transport.\nCreate a new <code>ClientBuilder</code>.\nReturns the channel size for the poller task.\nConnect a transport, producing an <code>RpcClient</code> with the …\nConnect a transport, producing an <code>RpcClient</code> with a …\nConnect with the given connection string.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>RpcClient</code> with the given inner client.\nBorrow the client.\nGet a <code>Weak</code> reference to the client.\nConvenience function to create a new <code>RpcClient</code> with a …\nGet a reference to the client.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert the client into its inner type.\nConvert this call into one with owned params, by cloning …\nStarts the poller and returns the stream of responses.\nConverts the poll channel into a stream.\nConverts the poll channel into a stream that also yields …\nReturns <code>true</code> if the request is a subscription.\nAdd a middleware layer to the stack.\nReturns the limit on the number of successful polls.\nSet a function to map the response into a different type.\nCreate a new batch request.\nCreates a new <code>RpcClient</code> with the given transport.\nCreate a new poller task.\nCreate a new <code>BatchRequest</code> builder.\nCreate a new <code>RpcClient</code> with an HTTP transport.\nGet a mutable reference to the params of the request.\nReturns the duration between polls.\nBuild a poller that polls a method with the given …\nReturns a reference to the request.\nReturns a mutable reference to the request.\nResubscribe to the poller task.\nSend the batch future via its connection.\nSets the channel size for the poller task.\nSet the request to be a non-standard subscription (i.e. not\nSets a limit on the number of successful polls.\nSets the duration between polls.\nSet the subscription status of the request.\nStarts the poller in a new Tokio task, returning a channel …\nCreate a new <code>RpcClient</code> with the given transport and the …\nTries to parse the given string as an HTTP URL.\nSets the channel size for the poller task.\nSets a limit on the number of successful polls.\nSets the poll interval for the client in milliseconds.\nSets the duration between polls.")