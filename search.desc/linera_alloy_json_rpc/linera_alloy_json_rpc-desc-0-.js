searchState.loadedDescShard("linera_alloy_json_rpc", 0, "Alloy JSON-RPC data types.\nA batch of responses.\nA batch of requests.\nA batch of responses.\nA <code>ErrorPayload</code> that has been partially deserialized, …\nA <code>Response</code> that has been partially deserialized, borrowing …\nA <code>BorrowedResponsePacket</code> is a <code>ResponsePacket</code> that has been …\nA <code>ResponsePayload</code> that has been partially deserialized, …\nA partially deserialized <code>RpcResult</code>, borrowing from the …\nJSON deserialization error.\nContains the error value\nContains the error value\nA JSONRPC-2.0 error object.\nServer returned an error response.\nAn ethereum-style notification, not to be confused with a …\nAn error response payload.\nAn error response payload.\nA JSON-RPC 2.0 ID object. This may be a number, a string, …\nReturned when a local pre-processing step fails. This …\nNull.\nAn Ethereum-style notification.\nServer returned a null response when a non-null response …\nA number.\nContains the success value\nContains the success value\nA <code>Request</code> that has been partially serialized. The request …\nAn item received over an Ethereum pubsub transport. …\nA JSON-RPC 2.0 request object.\n<code>RequestMeta</code> contains the <code>Id</code> and method name of a request.\nA <code>RequestPacket</code> is a <code>SerializedRequest</code> or a batch of …\nA JSONRPC-2.0 response object containing a <code>ResponsePayload</code>.\nA <code>Response</code> to a JSON-RPC request.\nA <code>ResponsePacket</code> is a <code>Response</code> or a batch of responses.\nA JSONRPC-2.0 response payload.\nAn RPC error.\nAn object that can be used as a JSON-RPC parameter and …\nAn object that can be used as a JSON-RPC parameter.\nThe result of a JSON-RPC request.\nAn object that can be used as a JSON-RPC return value.\nJSON serialization error.\nA JSON-RPC 2.0 request object that has been serialized, …\nA single response.\nA single request.\nA single response.\nA string.\nA successful response payload.\nA successful response payload.\nTransport error.\nRpc server returned an unsupported feature.\nReturns the ErrorPayload if the response is an error.\nFallible conversion to the error object.\nFallible conversion to an error response.\nReturns the ID as a number, if it is one.\nReturns the ID as a string, if it is one.\nFallible conversion to the successful payload.\nSerialize the request parameters as a boxed <code>RawValue</code>.\nThe error code.\nThe error code.\nThe error data (if any).\nThe error data (if any).\nConsumes the serialized request, returning the underlying …\nAttempt to deserialize the data field.\nInstantiate a new <code>DeserError</code> from a <code>serde_json::Error</code> and …\nAttempt to deserialize the Error payload, transforming …\nAttempt to deserialize the Success payload, transforming …\nDeserialize an Error payload, if possible, transforming …\nDeserialize a Success payload, if possible, transforming …\nInstantiate a new <code>ErrorResp</code> from an error response.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the request ID.\nThe ID of the request that this response is responding to.\nThe request ID.\nThe ID of the request that this response is responding to.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert this borrowed response packet into an owned packet …\nConvert this borrowed error payload into an owned payload …\nConvert this borrowed response payload into an owned …\nConvert this borrowed response to an owned response by …\nConvert this borrowed response packet into an owned packet …\nConvert this borrowed error payload into an owned payload …\nConvert this borrowed response payload into an owned …\nConvert this borrowed response to an owned response by …\nClone the request, including the request parameters.\nConsume the serialized request, returning the underlying …\nCheck if the error is a deserialization error.\nCheck if the packet is empty.\nReturns <code>true</code> if the response payload is an error.\nReturns <code>true</code> if the response payload is an error.\nReturns <code>true</code> if the response is an error.\nCheck if the error is an error response.\nCheck if the error is a local usage error.\nReturns <code>true</code> if the ID is <code>None</code>.\nCheck if the error is a null response.\nReturns <code>true</code> if the ID is a number.\nCheck if the error is a serialization error.\nReturns <code>true</code> if the ID is a string.\nReturns <code>true</code> if the request is a subscription.\nReturns <code>true</code> if the request is a subscription.\nReturns <code>true</code> if the request is a subscription.\nReturns <code>true</code> if the response payload is a success.\nReturns <code>true</code> if the response payload is a success.\nReturns <code>true</code> if the response is a success.\nCheck if the error is a transport error.\nCheck if the error is an unsupported feature error.\nReturns an iterator over the ErrorPayloads in the response.\nGet the number of requests in the packet.\nInstantiate a new <code>LocalUsageError</code> from a custom error.\nInstantiate a new <code>LocalUsageError</code> from a custom error …\nThe error message (if any).\nThe error message (if any).\nReturns the request metadata (ID and Method).\nThe request metadata (ID and method).\nThe request metadata (ID and method).\nReturns the request method.\nThe method name.\nCreate a new <code>RequestMeta</code>.\nCreate a new <code>Request</code>.\nGet a reference to the serialized request’s params.\nThe request parameters.\nThe request parameters.\nGet the hash of the serialized request’s params.\nThe response payload.\nThe response payload.\nPush a request into the packet.\nFind responses by a list of IDs.\nThe notification payload.\nInstantiate a new <code>SerError</code> from a <code>serde_json::Error</code>. This …\nSerialize the packet as a boxed <code>RawValue</code>.\nSerialize the request, including the request parameters.\nReturns the serialized request.\nIndicates that the request is a non-standard subscription …\nIndicates that the request is a non-standard subscription …\nMark the request as a non-standard subscription (i.e. not …\nSetter for <code>is_subscription</code>. Indicates to RPC clients that …\nSetter for <code>is_subscription</code>. Indicates to RPC clients that …\nThe subscription ID.\nGet the request IDs of all subscription requests in the …\nTake the serialized request, consuming the …\nTransform a transport response into an <code>RpcResult</code>, …\nTransform a transport outcome into an <code>RpcResult</code>, …\nAttempt to deserialize the params, borrowing from the …\nDeserialize the error’s <code>data</code> field, borrowing from the …\nAttempt to deserialize the <code>Ok(_)</code> variant of an <code>RpcResult</code>.\nAttempt to deserialize the error payload, borrowing from …\nAttempt to deserialize the error payload, borrowing from …\nAttempt to deserialize the params.\nAttempt to deserialize the success payload, borrowing from …\nAttempt to deserialize the success payload, borrowing from …\nCreate a new empty packet with the given capacity.\nThe underlying serde_json error.\nFor deser errors, the text that failed to deserialize.")