searchState.loadedDescShard("linera_client", 0, "This module provides a convenient library for writing a …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nA <code>ChainListener</code> is a process that listens to notifications …\nWait after processing any notification (useful for rate …\nWait before processing any notification (useful for …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new chain listener given client chains.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nRuns the chain listener.\nDo not create blocks automatically to receive incoming …\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nApplies the given function to the chain client.\nRetrieve the default account. Current this is the common …\nRetrieve the default chain.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMakes one block proposal per chain, up to <code>num_chains</code> …\nTries to aggregate votes into certificates.\nCreates chains if necessary, and returns a map of exactly …\nBroadcasts a bulk of blocks to each validator.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nStages the execution of a block proposal.\nCreates chains if necessary, and returns a map of exactly …\nRemembers the new private key (if any) in the wallet.\nReturns the <code>Wallet</code> as a mutable reference.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nLink a key owned by the wallet to a chain that was just …\nSend one transfer per chain in bulk mode\nChanges the application permissions configuration.\nChange who owns the chain, and how the owners work …\nClose an existing chain.\nCreate an application.\nCreate genesis configuration for a Linera deployment. …\nRun a GraphQL service that exposes a faucet where users …\nForgets the specified chain, including the associated key …\nForgets the specified chain’s keys.\nPrint CLI help in Markdown format, and exit.\nPrint a bash helper script to make <code>linera net up</code> easier to …\nInitialize a wallet from the genesis configuration.\nCreate an unassigned key-pair.\nRead the current native-token balance of the given account …\nManage a local Linera Network.\nCreate a new Linera project.\nOpen (i.e. activate) a new chain deriving the UID from an …\nOpen (i.e. activate) a new multi-owner chain deriving the …\nProcess all pending incoming messages from the inbox of …\nManage Linera projects.\nCreate an application, and publish the required bytecode.\nBuild and publish a Linera project.\nPublish a blob of binary data.\nPublish bytecode.\nSimulate the execution of one block made of pending …\nShow the version and genesis config hash of a new …\nShow the current set of validators for a chain.\nRemove a validator (admin only)\nRequest an application from another chain, so it can be …\nView or update the resource control policy\nRetry a block we unsuccessfully tried to propose earlier.\nRun a GraphQL service to explore and extend the chains of …\nChange the wallet default chain.\nAdd or modify a validator (admin only)\nShow the contents of the wallet.\nSubscribe to a system channel.\nSynchronize the local state of the chain with a quorum …\n(DEPRECATED) Synchronize the local state of the chain with …\nTest a Linera project.\nTransfer funds\nUnsubscribe from a system channel.\nStart a Local Linera Network\nShow the contents of the wallet.\nWatch the network for notifications.\nThe maximal number of entries in the storage cache.\nThese applications are allowed to close the current chain …\nSubcommand.\nIf present, only operations from the specified …\nThe age of an incoming tracked or protected message after …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAt least one operation or incoming message from each of …\nThe maximal number of simultaneous queries to the database\nThe maximal number of simultaneous stream queries to the …\nThe policy for handling incoming messages.\nNumber of times to retry connecting to a validator for …\nDelay increment for retrying to connect to a validator for …\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nTimeout for receiving responses (milliseconds)\nTimeout for sending queries (milliseconds)\nStorage configuration for the blockchain history.\nThe number of Tokio worker threads to use.\nWhether to wait until a quorum of validators has confirmed …\nSets the file storing the private state of user chains (an …\nThe WebAssembly runtime to use.\nGiven an integer value N, read the wallet state and the …\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nThe account to read, written as <code>CHAIN-ID:OWNER</code> or simply …\nThe account to query, written as <code>CHAIN-ID:OWNER</code> or simply …\nThe account to query, written as <code>CHAIN-ID:OWNER</code> or simply …\nThe new validator’s address.\nNetwork address\nIndex of the admin chain in the genesis config\nAmount to transfer\nThe number of tokens to send to each new chain.\nThe ID of the application to request.\nThe initial balance of the new chain. This is subtracted …\nThe initial balance of the new chain. This is subtracted …\nPath to blob file to be published.\nSet the base price for creating a block.\nSet the base price for creating a block.\nSet the price per byte read.\nSet the price per byte read.\nSet the price per byte stored.\nSet the price per byte stored.\nSet the price per byte written.\nSet the price per byte written.\nThe bytecode ID of the application to create.\nChain ID (must be one of our chains).\nChain ID (must be one of our chains).\nThe ID of the chain whose owners will be changed.\nThe ID of the chain to which the new permissions will be …\nChain ID (must be one of our chains)\nThe chain to synchronize with validators. If omitted, …\nThe chain to process. If omitted, uses the default chain …\nThe chain to query. If omitted, query the default chain of …\nThe chain ID to watch.\nThe chain that gives away its tokens.\nThe chain with the pending block. If not specified, the …\nSystem channel available in the system application.\nSystem channel available in the system application.\nSets the file describing the public configurations of all …\nPath to the Wasm file for the application “contract” …\nPath to the Wasm file for the application “contract” …\nAn optional chain ID to host the application. The default …\nSet the price per unit of fuel.\nSet the price per unit of fuel.\nThe application ID of a fungible token on the wallet’s …\nThe output config path to be consumed by the server\nKnown initial balance of the chain\nThe instantiation argument as a JSON string.\nThe instantiation argument as a JSON string.\nPath to a JSON file containing the instantiation argument.\nPath to a JSON file containing the instantiation argument.\nThe shared parameters as JSON string.\nThe shared parameters as JSON string.\nPath to a JSON file containing the shared parameters.\nPath to a JSON file containing the shared parameters.\nThe public key to assign.\nThe end timestamp: The faucet will rate-limit the token …\nMaximum number of blocks in flight\nSet the maximum read data per block.\nSet the maximum read data per block.\nSet the maximum write data per block.\nSet the maximum write data per block.\nSet the base price of sending a message from a block..\nSet the additional price for each byte in the argument of …\nSet the additional price for each byte in the argument of …\nThe ID of the message that created the chain. (This …\nSet the base price of sending a message from a block..\nThe public key of the validator.\nThe public key of the validator.\nA unique name to identify this network.\nHow many chains to use for the benchmark\nNumber of initial (aka “root”) chains to create in …\nSet the base price of sending a operation from a block..\nSet the additional price for each byte in the argument of …\nSet the additional price for each byte in the argument of …\nSet the base price of sending a operation from a block..\nThe port on which to run the server\nThe port on which to run the server\nPublic key of the new owner (otherwise create a key pair …\nChain ID.\nChain ID.\nAn optional chain ID to publish the bytecode. The default …\nAn optional chain ID to publish the blob. The default …\nAn optional chain ID to publish the bytecode. The default …\nShow all notifications from all validators.\nSet the price per read operation.\nSet the price per read operation.\nRecipient account\nThe owned chain on which the application is missing.\nThe list of required dependencies of application, if any.\nThe list of required dependencies of application, if any.\nSending chain ID (must be one of our chains)\nPath to the Wasm file for the application “service” …\nPath to the Wasm file for the application “service” …\nSkip the version and genesis config checks.\nThe start timestamp: no blocks can be created before this …\nChain ID (must be one of our chains).\nChain ID (must be one of our chains).\nThe target chain on which the application is already …\nForce this wallet to generate keys using a PRNG and a …\nHow many tokens to assign to each newly created chain. …\nHow many transactions to put in each block.\nUser Data (should be a string whose bytes are at most 32 …\nVoting power\nSet the price per write operation.\nSet the price per write operation.\nIf this is not set, we’ll build the binaries from within …\nThe number of extra wallets and user chains to initialise. …\nThe initial amount of native tokens credited in the …\nStart the local network on a local Kubernetes deployment.\nThe number of initial “root” chains created in the …\nConfigure the resource control policy (notably fees) …\nThe number of shards per validator in the local test …\nThe name for the database table to store the chain data in.\nForce this wallet to generate keys using a PRNG and a …\nThe number of validators in the local test network. …\nThe instantiation argument as a JSON string.\nPath to a JSON file containing the instantiation argument.\nThe shared parameters as JSON string.\nPath to a JSON file containing the shared parameters.\nUse the given clone of the Linera repository instead of …\nThe project name. A directory of the same name will be …\nSpecify the name of the Linera project. This is used to …\nThe path of the root of the Linera project. Defaults to …\nAn optional chain ID to publish the bytecode. The default …\nThe list of required dependencies of application, if any.\nThe address of a faucet.\nThe path to the genesis configuration for a Linera …\nForce this wallet to generate keys using a PRNG and a …\nRequest a new chain from the faucet, credited with tokens. …\nOther chains to follow.\nThe (public) configuration for all validators.\nThe public configuration of a validator.\nThe private configuration of a validator service.\nThe runtime state of the wallet, persisted atomically on …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe public key of the validator.\nThe network configuration for the validator.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nThe <code>Persist</code> trait provides a wrapper around a value that …\nGets a mutable reference to the value.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTakes the value out.\nGets a mutable reference to the value which, on drop, will …\nSaves the value to persistent storage.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nAn implementation of <code>Persist</code> based on an …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTakes the value out, releasing the lock on the persistent …\nCreates a new persistent file at <code>path</code> containing <code>value</code>.\nWrites the value to disk.\nReads the value from a file at <code>path</code>, returning an error if …\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads the value from a file at <code>path</code>, calling the <code>value</code> …\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nError returned by this crate\nError returned from JavaScript\nError if the requested key is not found\nError from <code>serde</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nA dummy <code>Persist</code> implementation that doesn’t persist …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nThe DynamoDb key value store\nThe DynamoDB description\nThe memory key value store\nThe memory description\nThe RocksDB key value store\nThe RocksDB description\nThe ScyllaDb key value store\nThe ScyllaDb description\nThe storage service key-value store\nThe storage service description\nThe description of a storage implementation.\nThe description of a storage implementation.\nThe configuration of the key value store in use.\nThe addition of the common config to get a full …\nDeletes all the entries in the database\nDeletes only one table of the database\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInitializes the database\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLists all the namespaces of the storage\nThe namespace used\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nThe storage config\nTest existence of one table in the database\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nThe endpoint used\nThe path used\nThe URI for accessing the database\nWhether to use the localstack system\nReturns after the specified time or if we receive a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a user chain that we own.\nCreates an entry for a chain that we don’t own. The …\nReturns the list of all chain IDs for which we have a …\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.")