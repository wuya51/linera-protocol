searchState.loadedDescShard("linera_alloy_contract", 0, "linera-alloy-contract\nAn error occurred ABI encoding or decoding.\nA builder for sending a transaction via <code>eth_sendTransaction</code>…\nA trait for decoding the output of a contract function.\nA handle to an Ethereum contract at a specific address.\n<code>contractAddress</code> was not found in the deployment …\n<code>CallBuilder</code> using a <code>Function</code> as the call decoder.\nContains the error value\nError when interacting with contracts.\nAn <code>linera_alloy_provider::EthCall</code> with an abi decoder.\nHelper for managing the event filter before querying or …\nAn event poller.\nA smart contract interface.\nCalled <code>deploy</code> with a transaction that is not a deployment …\nContains the success value\n<code>CallBuilder</code> that does not have a call decoder.\nDynamic contract result type.\n<code>CallBuilder</code> using a <code>SolCall</code> type as the call decoder.\nAn error occurred interacting with a contract over RPC.\nUnknown function referenced.\nUnknown function selector referenced.\nReturns a reference to the contract’s ABI.\nReturns a reference to the contract’s ABI.\nSets the <code>access_list</code> in the transaction to the provided …\nReturns a reference to the contract’s address.\nReturns a new contract instance at <code>address</code>.\nSet the block to use for this call.\nSets the <code>block</code> field for sending the tx to the chain\nCalculates the address that will be created by the …\nQueries the blockchain via an <code>eth_call</code> without submitting …\nQueries the blockchain via an <code>eth_call</code> without submitting …\nReturns the underlying transaction’s ABI-encoded data.\nSets the <code>chain_id</code> field in the transaction to the provided …\nClears the decoder, returning a raw call builder.\nClears the decoder, returning a raw call builder.\nClears the decoder, returning a raw call builder.\nClears the decoder, returning a raw call builder.\nCreate a <code>ContractInstance</code> from this ABI for a contract at …\nABI-decodes the given data according to the function’s …\nDecode the provided ABI encoded bytes as the input of the …\nDecode the provided ABI encoded bytes as the output of the …\nDecodes the output of a contract function using the …\nDecode the provided ABI encoded bytes as the output of the …\nBroadcasts the underlying transaction to the network as a …\nReturns the ABI encoded data (including the selector) for …\nReturns the ABI encoded data (including the selector) for …\nReturns the estimated gas cost for the underlying …\nReturns an <code>Event</code> builder with the provided filter.\nThe filter to use for querying or streaming logs.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSets the <code>from</code> field in the transaction to the provided …\nReturns the argument unchanged.\nReturns a transaction builder for the provided function …\nReturns a transaction builder for the provided function …\nSets the <code>gas</code> field in the transaction to the provided value\nSets the <code>gas_price</code> field in the transaction to the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the interface, returning the inner ABI.\nStarts the poller and returns a stream that yields the …\nSets the transaction request to the provided tx kind.\nUses a Legacy transaction instead of an EIP-1559 one to …\nApplies a function to the internal transaction request.\nSets the <code>max_fee_per_blob_gas</code> in the transaction to the …\nSets the <code>max_fee_per_gas</code> in the transaction to the provide …\nSets the <code>max_priority_fee_per_gas</code> in the transaction to …\nCreates a new event with the provided provider and filter.\nCreate a new <code>EthCall</code>.\nCreates a new contract interface from the provided ABI.\nCreates a new contract from the provided address, …\nCreates a new call builder with the provided provider and …\nCreate a new <code>EthCall</code>.\nCreates a new call builder with the provided provider and …\nCreates a new call builder with the provided provider and …\nCreates a new call builder with the provided provider and …\nSets the <code>nonce</code> field in the transaction to the provided …\nSet the state overrides for this call.\nThe inner poller.\nReturns a reference to the contract’s provider.\nThe provider to use for querying or streaming logs.\nThe provider.\nThe provider.\nThe provider.\nThe provider.\nQueries the blockchain for the selected filter and returns …\nQueries the blockchain for the selected filter and returns …\nBroadcasts the underlying transaction to the network.\nSets the contract’s address.\nSets the <code>sidecar</code> field in the transaction to the provided …\nSets the state override set.\nSets the <code>to</code> field in the transaction to the provided …\nSets the <code>value</code> field in the transaction to the provided …\nWatches for events that match the filter.\nClones the provider and returns a new event with the …\nClones the provider and returns a new contract instance …\nClones the provider and returns a new builder with the …\nSwap the decoder for this call.\nSets the decoder to the provided <code>SolCall</code>.\nSets the decoder to the provided <code>SolCall</code>.")