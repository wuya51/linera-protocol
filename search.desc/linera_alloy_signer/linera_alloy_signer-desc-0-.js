searchState.loadedDescShard("linera_alloy_signer", 0, "linera-alloy-signer\n<code>ecdsa</code> error.\nContains the error value\nGeneric error type for <code>Signer</code> implementations.\n<code>hex</code> error.\nContains the success value\nGeneric error.\nResult type alias for <code>Error</code>.\n<code>sign_hash</code> is not supported by the signer.\n<code>sign_message</code> is not supported by the signer.\n<code>sign_transaction</code> is not supported by the signer.\n<code>sign_typed_data</code> is not supported by the signer.\nAn ECDSA Signature, consisting of V, R, and S.\nSignature error.\nAsynchronous Ethereum signer.\nSynchronous Ethereum signer.\nMismatch between provided transaction chain ID and signer …\nThis operation is not supported by the signer.\nAn unsupported signer operation.\nReturns the signer’s Ethereum Address.\nReturns the string representation of the operation.\nReturns the signer’s chain ID.\nReturns the signer’s chain ID.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the error is <code>UnsupportedOperation</code>.\nConstructs a new <code>Other</code> error.\nSets the signer’s chain ID.\nSigns the given hash.\nSigns the given hash.\nSigns the hash of the provided message after prefixing it, …\nSigns the hash of the provided message after prefixing it, …\nSigns the hash of the provided message after prefixing it, …\nSigns the hash of the provided message after prefixing it, …\nUtility to get and set the chain ID on a transaction and …\nReturns the <code>UnsupportedSignerOperation</code> if the error is …\nUtility functions for working with Ethereum signatures.\nSets the signer’s chain ID and returns <code>self</code>.\nSets the signer’s chain ID and returns <code>self</code>.\nThe signer’s chain ID.\nThe chain ID provided by the transaction.\nConverts an ECDSA public key to its corresponding Ethereum …\nConvert a raw, uncompressed public key to its …\nConverts an ECDSA private key to its corresponding …")