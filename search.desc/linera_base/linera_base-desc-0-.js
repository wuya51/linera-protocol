searchState.loadedDescShard("linera_base", 0, "This module provides a common set of types and library …\nAn error trying to parse the hex-digits of a BCS-encoded …\nThis module defines the notion of Application Binary …\nDefines a GraphQL scalar type using the hex-representation …\nCommand functionality used for spanning child processes.\nDefine the cryptographic primitives used by the Linera …\nCore data-types used in the Linera protocol.\nDefines a GraphQL scalar with a description string.\nA macro for asserting that a condition is true, returning …\nReturns the argument unchanged.\nFormats a byte sequence as a hexadecimal string, and …\nCore identifiers used by the Linera protocol.\nCalls <code>U::from(self)</code>.\nStructures defining the set of owners and super owners, as …\nThis module defines util functions for interacting with …\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nTemporal quantification.\nThis module provides unified handling for tracing …\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nA trait that includes all the types exported by a Linera …\nThe contract types to import.\nThe service types to import.\nA trait that includes all the types exported by a Linera …\nThe type of operation executed by the application.\nThe type of a query receivable by the application’s …\nThe response type of the application’s service.\nThe response type of an application call.\nA trait that includes all the types exported by a Linera …\nMarker trait to help importing contract types.\nMarker trait to help importing service types.\nExtension trait for <code>tokio::process::Command</code>.\nRetrieves the path from the binary parent.\nObtains the current binary parent\nDescription used for error reporting.\nObtains the version from the message.\nAttempts to resolve the path and test the version of the …\nSame as <code>resolve_binary</code> but gives the option to specify a …\nSpawns and waits for process to finish executing. Will not …\nSimilar to <code>tokio::process::Command::output</code> but does not …\nSimilar to <code>tokio::process::Command::spawn</code> but sets …\nActivate the blanket implementation of <code>Hashable</code> based on …\nActivate the blanket implementation of <code>Signable</code> based on …\nError type for cryptographic errors.\nA Sha3-256 value.\nWrapper around <code>rand::CryptoRng</code> and <code>rand::RngCore</code>.\nSomething that we know how to hash and sign.\nSomething that we know how to hash.\nA signature key-pair.\nA signature public key.\nA signature value.\nA BCS-signable struct for testing.\nReads the bytes of the hash value.\nChecks a signature.\nChecks an optional signature.\nCopies the key-pair, <strong>including the secret key</strong>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerates a new key-pair.\nGenerates a new key-pair from the given RNG. Use with care.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nComputes a hash.\nComputes a signature.\nCreates a new <code>TestString</code> with the given string.\nObtains the public key of a key-pair.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReturns the hash of <code>TestString(s)</code>, for testing purposes.\nA fake public key used for testing.\nThe name of the type.\nVerifies a batch of signatures.\nSend the content of <code>Self</code> to the given hasher.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nA non-negative amount of tokens.\nPermissions for applications on a chain.\nAn error type for arithmetic errors.\nAn assertion oracle that passed.\nA blob of binary data, with its content-addressed blob ID.\nA successful read or write of a blob.\nA blob of binary data.\nA block height to identify blocks in a chain.\nThe base-10 exponent representing how much a token can be …\nThe initial fast round.\nThe maximum value.\nThe maximum value.\nThe maximum value.\nThe N-th multi-leader round.\nOne token.\nA record of a single oracle response.\nThe response from an HTTP POST request.\nResources that an application may spend during the …\nAn identifier for successive attempts to decide a value in …\nA request to send a message.\nThe response from a service query.\nThe N-th single-leader round.\nA duration in microseconds.\nA timestamp, in microseconds since the Unix epoch.\nThe N-th round where the validators rotate as leaders.\nThe zero value.\nThe zero value.\nThe zero value.\nReturns this <code>TimeDelta</code> as a <code>Duration</code>.\nReturns this <code>TimeDelta</code> as a number of microseconds.\nWhether the message is authenticated.\nBytes of the binary blob.\nA number of bytes to read.\nA number of bytes to write.\nReturns whether the given application is allowed to close …\nReturns whether operations with the given application ID …\nThese applications are allowed to close the current chain …\nReturns a reference to the inner <code>BlobContent</code>, without the …\nReturns the <code>TimeDelta</code> between <code>other</code> and <code>self</code>, or zero if …\nThe destination of the message.\nReturns the <code>Duration</code> between <code>other</code> and <code>self</code>, or zero if …\nIf this is <code>None</code>, all system operations and application …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns an <code>Amount</code> corresponding to that many attotokens.\nReturns the given duration, rounded to the nearest …\nReturns an <code>Amount</code> corresponding to that many microtokens, …\nReturns the given number of microseconds as a <code>TimeDelta</code>.\nReturns an <code>Amount</code> corresponding to that many millitokens, …\nReturns the given number of milliseconds as a <code>TimeDelta</code>.\nReturns an <code>Amount</code> corresponding to that many nanotokens, …\nReturns the given number of seconds as a <code>TimeDelta</code>.\nReturns an <code>Amount</code> corresponding to that many tokens, or …\nAn amount of execution fuel.\nThe grant resources forwarded with the message.\nA content-addressed blob ID i.e. the hash of the <code>Blob</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMoves ownership of the blob of binary data\nSerializes the internal <code>Message</code> type into raw bytes.\nWhether the round is the fast round.\nWhether the round is a multi-leader round.\nWether an <code>OracleResponse</code> is permitted in fast blocks or …\nWhether the message is tracked.\nLoads a blob from a file.\nHelper function to obtain the 64 least significant bits of …\nAt least one operation or incoming message from each of …\nThe message itself.\nThe size of the messages to be sent.\nA number of messages to be sent.\nReturns the number of microseconds since the Unix epoch.\nCreates new <code>ApplicationPermissions</code> where the given …\nReturns the current time according to the system clock.\nThe index of a round amongst the rounds of the same …\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nA number of read operations to be executed.\nSaturating addition.\nSaturating addition.\nSaturating addition.\nReturns the timestamp that is <code>duration</code> later than <code>self</code>.\nSaturating in-place addition.\nSaturating in-place addition.\nSaturating in-place addition.\nReturns a timestamp <code>micros</code> microseconds later than <code>self</code>, …\nDivides this by the other amount. If the other is 0, it …\nSaturating multiplication.\nSaturating multiplication.\nSaturating multiplication.\nSaturating subtraction.\nSaturating subtraction.\nSaturating subtraction.\nReturns the timestamp that is <code>duration</code> earlier than <code>self</code>.\nReturns a timestamp <code>micros</code> microseconds earlier than <code>self</code>, …\nAn increase in the amount of storage space.\nCreates a <code>BlobContent</code> from a string for testing purposes.\nCreates a <code>Blob</code> from a string for testing purposes.\nChecked addition.\nChecked addition.\nChecked addition.\nChecked in-place addition.\nChecked in-place addition.\nChecked in-place addition.\nChecked in-place increment.\nChecked in-place increment.\nChecked in-place increment.\nChecked increment.\nChecked increment.\nChecked increment.\nChecked multiplication.\nChecked multiplication.\nChecked multiplication.\nChecked in-place multiplication.\nChecked in-place multiplication.\nChecked in-place multiplication.\nChecked subtraction.\nChecked subtraction.\nChecked subtraction.\nChecked in-place subtraction.\nChecked in-place subtraction.\nChecked in-place subtraction.\nChecked decrement.\nChecked decrement.\nChecked decrement.\nThe category of the round as a string.\nHelper function to obtain the 64 most significant bits of …\nCreates a <code>Blob</code> checking that this is the correct <code>BlobId</code>.\nCreates a <code>Blob</code> without checking that this is the correct …\nCreates a <code>Blob</code> by hashing <code>self</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nA number of write operations to be executed.\nA system account.\nAn account owner.\nAn account for an application.\nA unique identifier for a user application.\nA content-addressed blob ID i.e. the hash of the …\nThe type of the blob.\nA unique identifier for an application bytecode.\nHow to create a chain.\nThe unique identifier (UID) of a chain. This is currently …\nThe name of a subscription channel.\nThe chain was created by a message from another chain.\nA generic data blob.\nThe destination of a message, relative to a particular …\nA unique identifier for an application.\nThe index of a message in a chain.\nThe owner of a chain. This is currently the hash of the …\nDirect message to a chain.\nThe chain was created by the genesis configuration.\nAn event stream ID.\nThe name of an event stream.\nBroadcast to the current subscribers of our channel.\nThe system application.\nAn account owned by a user.\nA user application.\nThe application that can add events to this stream.\nThe type of the blob.\nThe bytecode to use for the application.\nCreates an Account with a ChainId\nThe chain of the account.\nThe chain ID that created the message.\nThe chain ID representing the chain created by the given …\nThe unique ID of the application’s creation.\nForgets the ABI of a bytecode ID (if any).\nForgets the ABI of a bytecode ID (if any).\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe hash of the blob.\nThe height of the block that created the message.\nThe index of the message inside the block.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTurns the channel name into bytes.\nTurns the stream name into bytes.\nWhether the destination is a broadcast channel.\nWhether the chain was created by another chain.\nLeaves just the ABI of a bytecode ID (if any).\nThe message ID that published the bytecode.\nCreates a bytecode ID from a message ID.\nCreates a new <code>BlobId</code> from a <code>BlobContent</code>\nCreates a new <code>BlobId</code> from a hash\nCreates an Account with a ChainId and an Owner\nThe owner of the account, or <code>None</code> for the chain balance.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nThe chain ID representing the N-th chain created at …\nThe name of this stream: an application can have multiple …\nReturns the <code>ApplicationId</code>, or <code>None</code> if it is <code>System</code>.\nSpecializes an application ID for a given ABI.\nSpecializes a bytecode ID for a given ABI.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nRepresents the owner(s) of a chain.\nErrors that can happen when attempting to close a chain.\nAuthenticated signer wasn’t allowed to close the chain.\nThe timeout configuration: how long fast, multi-leader and …\nReturns an iterator over all super owners, followed by all …\nReturns an iterator over all super owners’ keys, …\nThe duration of the first single-leader and all …\nThe age of an incoming tracked or protected message after …\nThe duration of the fast round.\nReturns the first consensus round for this configuration.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether there are any owners or super owners or it …\nThe number of initial rounds after 0 in which all owners …\nCreates a <code>ChainOwnership</code> with the specified regular owners.\nReturns the round following the specified one, if any.\nThe regular owners, with their weights that determine how …\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReturns the duration of the given round.\nCreates a <code>ChainOwnership</code> with a single super owner.\nSuper owners can propose fast blocks in the first round, …\nThe timeout configuration: how long fast, multi-leader and …\nThe duration by which the timeout increases after each …\nReturns the given owner’s public key, if they are an …\nAdds a regular owner.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nA guard for an active latency measurement.\nAn extension trait for metrics that can be used to measure …\nFinishes the measurement, updates the <code>Metric</code> and the …\nUpdates the metric with measured latency in <code>milliseconds</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nStarts measuring the latency, finishing when the returned …\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nWrapper arount prometheus register_histogram_vec! macro …\nWrapper arount prometheus register_int_counter_vec! macro …\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nA <code>Duration</code> type to represent a span of time, typically …\nA measurement of a monotonically nondecreasing clock. …\nThe maximum duration.\nThe duration of one microsecond.\nThe duration of one millisecond.\nThe duration of one nanosecond.\nThe duration of one second.\nA measurement of the system clock, useful for talking to …\nAn error returned from the <code>duration_since</code> and <code>elapsed</code> …\nAn error which can be returned when converting a …\nAn anchor in time which can be used to create new …\nAn anchor in time which can be used to create new …\nA duration of zero time.\nComputes the absolute difference between <code>self</code> and <code>other</code>.\nPanics\nPanics\nReturns the total number of whole microseconds contained …\nReturns the total number of whole milliseconds contained …\nReturns the number of milliseconds contained by this …\nReturns the number of milliseconds contained by this …\nReturns the total number of nanoseconds contained by this …\nReturns the number of <em>whole</em> seconds contained by this …\nReturns the number of seconds contained by this <code>Duration</code> …\nReturns the number of seconds contained by this <code>Duration</code> …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …\nChecked <code>Duration</code> addition. Computes <code>self + other</code>, …\nChecked <code>Duration</code> division. Computes <code>self / other</code>, …\nReturns the amount of time elapsed from another instant to …\nChecked <code>Duration</code> multiplication. Computes <code>self * other</code>, …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …\nChecked <code>Duration</code> subtraction. Computes <code>self - other</code>, …\nDivide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.\nDivide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.\nDivide <code>Duration</code> by <code>f32</code>.\nDivide <code>Duration</code> by <code>f64</code>.\nReturns the positive duration which represents how far …\nReturns the amount of time elapsed from another instant to …\nReturns the amount of time elapsed from an earlier point …\nReturns the amount of time elapsed since this instant.\nReturns the difference from this system time to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>Duration</code> from the specified number of days.\nCreates a new <code>Duration</code> from the specified number of hours.\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of whole …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of weeks.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if this <code>Duration</code> spans no time.\nMultiplies <code>Duration</code> by <code>f32</code>.\nMultiplies <code>Duration</code> by <code>f64</code>.\nCreates a new <code>Duration</code> from the specified number of whole …\nReturns an instant corresponding to “now”.\nReturns the system time corresponding to “now”.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nSaturating <code>Duration</code> addition. Computes <code>self + other</code>, …\nReturns the amount of time elapsed from another instant to …\nSaturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …\nSaturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …\nReturns the amount of time elapsed from another instant to …\nReturns the fractional part of this <code>Duration</code>, in whole …\nReturns the fractional part of this <code>Duration</code>, in whole …\nReturns the fractional part of this <code>Duration</code>, in …\nThe checked version of <code>from_secs_f32</code>.\nThe checked version of <code>from_secs_f64</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nInitializes tracing in a standard way. The environment …")